{"ast":null,"code":"import _regeneratorRuntime from\"/samba/Journal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/samba/Journal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{types}from\"../types/types\";import{firebase,googleAuthProvider}from'../firebase/firebase-config';import{startLoading,finishLoading}from\"./ui\";import Swal from'sweetalert2';import{emptyNotes}from'./notes';export var login=function login(uid,displayName,photoURL){return{type:types.login,payload:{uid:uid,displayName:displayName,photoURL:photoURL}};};export var startLoginEmailPassword=function startLoginEmailPassword(email,password){return function(dispatch){dispatch(startLoading());firebase.auth().signInWithEmailAndPassword(email,password).then(function(_ref){var user=_ref.user;dispatch(login(user.uid,user.displayName));dispatch(finishLoading());}).catch(function(e){console.log(e);dispatch(finishLoading());Swal.fire('Error',e.message,'error');});};};export var startRegisterWithEmailPasswordName=function startRegisterWithEmailPasswordName(email,password,name){return function(dispatch){firebase.auth().createUserWithEmailAndPassword(email,password).then(/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2){var user;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:user=_ref2.user;_context.next=3;return user.updateProfile({displayName:name});case 3:dispatch(login(user.uid,user.displayName));case 4:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref3.apply(this,arguments);};}()).catch(function(e){console.log(e);Swal.fire('Error',e.message,'error');});};};export var startGoogleLogin=function startGoogleLogin(){return function(dispatch){firebase.auth().signInWithPopup(googleAuthProvider).then(function(state){console.log(state);});};};export var startLogout=function startLogout(){return/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch,getState){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return firebase.auth().signOut();case 2:// const {notes} = getState()\n// const {active, notes: note} = notes\ndispatch(logout());dispatch(emptyNotes());case 4:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2,_x3){return _ref4.apply(this,arguments);};}();};export var logout=function logout(){return{type:types.logout};};","map":{"version":3,"sources":["/samba/Journal/src/actions/auth.js"],"names":["types","firebase","googleAuthProvider","startLoading","finishLoading","Swal","emptyNotes","login","uid","displayName","photoURL","type","payload","startLoginEmailPassword","email","password","dispatch","auth","signInWithEmailAndPassword","then","user","catch","e","console","log","fire","message","startRegisterWithEmailPasswordName","name","createUserWithEmailAndPassword","updateProfile","startGoogleLogin","signInWithPopup","state","startLogout","getState","signOut","logout"],"mappings":"uQAAA,OAASA,KAAT,KAAsB,gBAAtB,CACA,OAASC,QAAT,CAAmBC,kBAAnB,KAA6C,6BAA7C,CACA,OAASC,YAAT,CAAuBC,aAAvB,KAA4C,MAA5C,CACA,MAAOC,CAAAA,IAAP,KAAiB,aAAjB,CACA,OAASC,UAAT,KAA2B,SAA3B,CAEA,MAAO,IAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAACC,GAAD,CAAMC,WAAN,CAAmBC,QAAnB,QAAiC,CAClDC,IAAI,CAAEX,KAAK,CAACO,KADsC,CAElDK,OAAO,CAAE,CACLJ,GAAG,CAAHA,GADK,CAELC,WAAW,CAAXA,WAFK,CAGLC,QAAQ,CAARA,QAHK,CAFyC,CAAjC,EAAd,CAUP,MAAO,IAAMG,CAAAA,uBAAuB,CAAG,QAA1BA,CAAAA,uBAA0B,CAACC,KAAD,CAAQC,QAAR,CAAqB,CACxD,MAAM,UAACC,QAAD,CAAc,CAEhBA,QAAQ,CAACb,YAAY,EAAb,CAAR,CACAF,QAAQ,CAACgB,IAAT,GAAgBC,0BAAhB,CAA2CJ,KAA3C,CAAkDC,QAAlD,EACCI,IADD,CACO,cAAa,IAAXC,CAAAA,IAAW,MAAXA,IAAW,CAChBJ,QAAQ,CAAET,KAAK,CAACa,IAAI,CAACZ,GAAN,CAAWY,IAAI,CAACX,WAAhB,CAAP,CAAR,CACAO,QAAQ,CAACZ,aAAa,EAAd,CAAR,CAGH,CAND,EAOCiB,KAPD,CAOO,SAAAC,CAAC,CAAI,CACRC,OAAO,CAACC,GAAR,CAAYF,CAAZ,EACAN,QAAQ,CAACZ,aAAa,EAAd,CAAR,CACAC,IAAI,CAACoB,IAAL,CAAU,OAAV,CAAmBH,CAAC,CAACI,OAArB,CAA8B,OAA9B,EAEH,CAZD,EAeH,CAlBD,CAmBH,CApBM,CAsBP,MAAO,IAAMC,CAAAA,kCAAkC,CAAG,QAArCA,CAAAA,kCAAqC,CAACb,KAAD,CAAQC,QAAR,CAAkBa,IAAlB,CAAyB,CACvE,MAAM,UAAEZ,QAAF,CAAgB,CAClBf,QAAQ,CAACgB,IAAT,GAAgBY,8BAAhB,CAAgDf,KAAhD,CAAuDC,QAAvD,EACKI,IADL,2FACW,iJAAQC,IAAR,OAAQA,IAAR,uBAEGA,CAAAA,IAAI,CAACU,aAAL,CAAmB,CAACrB,WAAW,CAAEmB,IAAd,CAAnB,CAFH,QAIHZ,QAAQ,CACJT,KAAK,CAACa,IAAI,CAACZ,GAAN,CAAWY,IAAI,CAACX,WAAhB,CADD,CAAR,CAJG,sDADX,iEASKY,KATL,CASW,SAAAC,CAAC,CAAI,CACRC,OAAO,CAACC,GAAR,CAAYF,CAAZ,EACAjB,IAAI,CAACoB,IAAL,CAAU,OAAV,CAAmBH,CAAC,CAACI,OAArB,CAA8B,OAA9B,EAEH,CAbL,EAcH,CAfD,CAgBH,CAjBM,CAoBP,MAAO,IAAMK,CAAAA,gBAAgB,CAAC,QAAjBA,CAAAA,gBAAiB,EAAM,CAChC,MAAM,UAACf,QAAD,CAAc,CAChBf,QAAQ,CAACgB,IAAT,GAAgBe,eAAhB,CAAiC9B,kBAAjC,EAECiB,IAFD,CAEO,SAAAc,KAAK,CAAI,CACZV,OAAO,CAACC,GAAR,CAAYS,KAAZ,EACH,CAJD,EAKH,CAND,CAOH,CARM,CAUP,MAAO,IAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CAC7B,gGAAO,kBAAMlB,QAAN,CAAgBmB,QAAhB,6IACGlC,CAAAA,QAAQ,CAACgB,IAAT,GAAgBmB,OAAhB,EADH,QAGH;AACA;AACApB,QAAQ,CAAEqB,MAAM,EAAR,CAAR,CACArB,QAAQ,CAAEV,UAAU,EAAZ,CAAR,CANG,wDAAP,qEAQH,CATM,CAWP,MAAO,IAAM+B,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,SAAM,CACxB1B,IAAI,CAAEX,KAAK,CAACqC,MADY,CAAN,EAAf","sourcesContent":["import { types } from \"../types/types\"\r\nimport { firebase, googleAuthProvider } from '../firebase/firebase-config';\r\nimport { startLoading, finishLoading } from \"./ui\";\r\nimport Swal from 'sweetalert2'\r\nimport { emptyNotes } from './notes'\r\n\r\nexport const login = (uid, displayName, photoURL) => ({\r\n    type: types.login,\r\n    payload: {\r\n        uid,\r\n        displayName,\r\n        photoURL\r\n    }\r\n});\r\n\r\n\r\nexport const startLoginEmailPassword = (email, password) => {\r\n    return(dispatch) => {\r\n\r\n        dispatch(startLoading());\r\n        firebase.auth().signInWithEmailAndPassword(email, password)\r\n        .then( ({user})  => {\r\n            dispatch( login(user.uid, user.displayName))\r\n            dispatch(finishLoading());\r\n\r\n            \r\n        })\r\n        .catch(e => {\r\n            console.log(e);\r\n            dispatch(finishLoading());\r\n            Swal.fire('Error', e.message, 'error')\r\n\r\n        })\r\n\r\n\r\n    }\r\n}\r\n\r\nexport const startRegisterWithEmailPasswordName = (email, password, name)=>{\r\n    return( dispatch ) => {\r\n        firebase.auth().createUserWithEmailAndPassword( email, password )\r\n            .then( async ({user}) => {\r\n                \r\n                await user.updateProfile({displayName: name})\r\n                \r\n                dispatch(\r\n                    login(user.uid, user.displayName)\r\n                )\r\n            })\r\n            .catch(e => {\r\n                console.log(e)\r\n                Swal.fire('Error', e.message, 'error')\r\n\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const startGoogleLogin=() => {\r\n    return(dispatch) => {\r\n        firebase.auth().signInWithPopup( googleAuthProvider )\r\n        \r\n        .then( state => {\r\n            console.log(state)  \r\n        })\r\n    }\r\n}\r\n\r\nexport const startLogout = () => {\r\n    return async(dispatch, getState) => {\r\n        await firebase.auth().signOut();\r\n        \r\n        // const {notes} = getState()\r\n        // const {active, notes: note} = notes\r\n        dispatch( logout() )\r\n        dispatch( emptyNotes() )\r\n    }\r\n}\r\n\r\nexport const logout = () =>({\r\n    type: types.logout\r\n})\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}