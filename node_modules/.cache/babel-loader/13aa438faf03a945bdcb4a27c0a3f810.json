{"ast":null,"code":"import Swal from 'sweetalert2';\nimport { db } from \"../firebase/firebase-config\";\nimport { types } from '../types/types';\nimport { loadNotes } from '../helpers/loadNotes';\nimport { fileUpload } from '../helpers/fileUpload';\nexport const showHideF = (showHide, setshowHide) => {\n  if (showHide == 2) {\n    setshowHide(false);\n  } else {\n    setshowHide(true);\n  }\n\n  return {\n    type: types.notesActive,\n    payload: {\n      showHide\n    }\n  };\n};\nexport const startNewNote = () => {\n  return async (dispatch, getState) => {\n    const {\n      uid\n    } = getState().auth;\n    const newNote = {\n      title: '',\n      body: '',\n      date: new Date().getTime()\n    };\n    const doc = await db.collection(`${uid}/journal/notes`).add(newNote);\n    dispatch(activeNote(doc.id, newNote));\n    dispatch(addNewNote(doc.id, newNote));\n  };\n};\nexport const activeNote = (id, note) => ({\n  type: types.notesActive,\n  payload: {\n    id,\n    ...note\n  }\n});\nexport const addNewNote = (id, note) => ({\n  type: types.notesAddNew,\n  payload: {\n    id,\n    ...note\n  }\n});\nexport const startLoadingNotes = uid => {\n  return async dispatch => {\n    const notes = await loadNotes(uid);\n    dispatch(setNotes(notes));\n  };\n};\nexport const setNotes = notes => ({\n  type: types.notesLoad,\n  payload: notes\n});\nexport const startSaveNote = note => {\n  return async (dispatch, getState) => {\n    const {\n      uid\n    } = getState().auth;\n\n    if (!note.url) {\n      delete note.url;\n    }\n\n    const noteToFirestore = { ...note\n    };\n    delete noteToFirestore.id;\n    await db.doc(`${uid}/journal/notes/${note.id}`).update(noteToFirestore);\n    dispatch(refreshNote(note.id, noteToFirestore));\n    Swal.fire('saved', note.title, 'success');\n  };\n};\nexport const refreshNote = (id, note) => ({\n  type: types.notesUpdated,\n  payload: {\n    id,\n    note: {\n      id,\n      ...note\n    }\n  }\n});\nexport const startUploading = file => {\n  return async (dispatch, getState) => {\n    const {\n      active: activeNote\n    } = getState().notes;\n    Swal.fire({\n      title: 'Uploading...',\n      text: 'Please wait...',\n      allowOutsideClick: false,\n      didOpen: () => {\n        Swal.showLoading();\n      }\n    });\n    const fileUrl = await fileUpload(file);\n    activeNote.url = fileUrl;\n    dispatch(startSaveNote(activeNote));\n    Swal.close();\n  };\n};\nexport const startProfilePhoto = (file, photoDefault) => {\n  return async () => {\n    Swal.fire({\n      title: 'Uploading...',\n      text: 'Please wait...',\n      allowOutsideClick: false,\n      didOpen: () => {\n        Swal.showLoading();\n      }\n    });\n    const fileUrl = await fileUpload(file);\n    photoDefault = fileUrl;\n    Swal.close();\n  };\n};\nexport const startDeleting = id => {\n  return async (dispatch, getState) => {\n    const uid = getState().auth.uid;\n    await db.doc(`${uid}/journal/notes/${id}`).delete();\n    dispatch(deleteNote(id));\n  };\n};\nexport const deleteNote = id => ({\n  type: types.notesDelete,\n  payload: id\n});\nexport const emptyNotes = (notes, active) => ({\n  type: types.notesLogoutCleaning,\n  payload: {\n    active,\n    notes\n  }\n});","map":{"version":3,"sources":["/samba/Journal/src/actions/notes.js"],"names":["Swal","db","types","loadNotes","fileUpload","showHideF","showHide","setshowHide","type","notesActive","payload","startNewNote","dispatch","getState","uid","auth","newNote","title","body","date","Date","getTime","doc","collection","add","activeNote","id","addNewNote","note","notesAddNew","startLoadingNotes","notes","setNotes","notesLoad","startSaveNote","url","noteToFirestore","update","refreshNote","fire","notesUpdated","startUploading","file","active","text","allowOutsideClick","didOpen","showLoading","fileUrl","close","startProfilePhoto","photoDefault","startDeleting","delete","deleteNote","notesDelete","emptyNotes","notesLogoutCleaning"],"mappings":"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","sourcesContent":["import Swal from 'sweetalert2'\r\n\r\nimport { db } from \"../firebase/firebase-config\";\r\nimport { types } from '../types/types';\r\nimport { loadNotes } from '../helpers/loadNotes'\r\nimport { fileUpload } from '../helpers/fileUpload';\r\n\r\n\r\nexport const showHideF = (showHide, setshowHide) => {\r\n\r\n    if(showHide == 2){\r\n        setshowHide(false)\r\n    } else {\r\n        setshowHide(true)\r\n    }\r\n    \r\n    \r\n    return{\r\n    type: types.notesActive,\r\n    payload: {\r\n        showHide\r\n    }}\r\n\r\n\r\n    \r\n}\r\n\r\nexport const startNewNote = () => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {uid} = getState().auth\r\n\r\n        const newNote = {\r\n            title: '',\r\n            body: '',\r\n            date: new Date().getTime()\r\n        }\r\n        \r\n        const doc = await db.collection( `${uid}/journal/notes`).add( newNote) \r\n\r\n        dispatch( activeNote( doc.id, newNote) );\r\n        dispatch( addNewNote( doc.id, newNote) );\r\n    }\r\n}\r\n\r\nexport const activeNote = ( id, note ) => ({\r\n\r\n    type: types.notesActive,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n});\r\n\r\nexport const addNewNote = ( id, note ) => ({ \r\n    type: types.notesAddNew,\r\n    payload: {\r\n        id, \r\n        ...note\r\n    }\r\n})\r\n\r\n\r\nexport const startLoadingNotes = ( uid ) => {\r\n    return async ( dispatch ) => {\r\n        const notes = await loadNotes( uid );\r\n        dispatch(setNotes(notes));\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const setNotes = ( notes ) => ({\r\n    type: types.notesLoad,\r\n    payload: notes \r\n});\r\n\r\n\r\nexport const startSaveNote = ( note )=> {\r\n    return async(dispatch, getState) => {\r\n        \r\n        const {uid} = getState().auth\r\n\r\n        if ( !note.url ){\r\n        \r\n            delete note.url;\r\n        }\r\n\r\n        \r\n        const noteToFirestore =  { ...note };\r\n        delete noteToFirestore.id;\r\n\r\n        await db.doc(`${uid}/journal/notes/${ note.id }`).update( noteToFirestore );\r\n\r\n        dispatch( refreshNote(note.id, noteToFirestore) );\r\n        Swal.fire('saved', note.title, 'success')\r\n        \r\n    }\r\n}\r\n\r\nexport const refreshNote = ( id, note ) => ({\r\n    type: types.notesUpdated,\r\n    payload: {\r\n        id, \r\n        note: {\r\n            id,\r\n            ...note\r\n        }\r\n    }\r\n});\r\n\r\nexport const startUploading = (file) => {\r\n    return async( dispatch, getState ) => {\r\n\r\n        const { active:activeNote } = getState().notes;\r\n\r\n        Swal.fire({\r\n            title: 'Uploading...',\r\n            text: 'Please wait...',\r\n            allowOutsideClick: false,\r\n            didOpen: () => {\r\n                Swal.showLoading();\r\n            }\r\n        });\r\n\r\n        const fileUrl = await fileUpload(file)\r\n\r\n        activeNote.url= fileUrl;\r\n\r\n        dispatch( startSaveNote( activeNote ) )\r\n\r\n        Swal.close();\r\n    }\r\n}\r\n\r\nexport const startProfilePhoto = (file, photoDefault) => {\r\n    return async() => {\r\n\r\n        Swal.fire({\r\n            title: 'Uploading...',\r\n            text: 'Please wait...',\r\n            allowOutsideClick: false,\r\n            didOpen: () => {\r\n                Swal.showLoading();\r\n            }\r\n        });\r\n\r\n        const fileUrl = await fileUpload(file)\r\n\r\n        photoDefault = fileUrl;\r\n\r\n        Swal.close();\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const startDeleting = ( id ) => {\r\n    return async (dispatch, getState) => {\r\n        const uid = getState().auth.uid;\r\n        await db.doc(`${ uid }/journal/notes/${ id }`).delete();\r\n\r\n        dispatch( deleteNote(id) );\r\n        \r\n    }\r\n}\r\n\r\n\r\nexport const deleteNote = ( id ) => ({\r\n    type: types.notesDelete,\r\n    payload: id,\r\n})\r\n\r\nexport const emptyNotes = (notes, active) => ({\r\n    type: types.notesLogoutCleaning,\r\n    payload: {\r\n        active,\r\n        notes\r\n    }\r\n})\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}