{"ast":null,"code":"import _regeneratorRuntime from\"/samba/Journal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/samba/Journal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/samba/Journal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{AuthRouter}from'./AuthRouter';import{JournalScreen}from'../components/journal/JournalScreen';import{useDispatch}from'react-redux';import{login}from'../actions/auth';import{PrivateRoute}from'./PrivateRoute';import{PublicRoute}from'./PublicRoute';import React,{useEffect,useState}from'react';import{firebase}from'../firebase/firebase-config';import{BrowserRouter as Router,Switch,Redirect}from'react-router-dom';import{LoadingScreen}from'../components/journal/LoadingScreen';import{startLoadingNotes}from'../actions/notes';export var AppRouter=function AppRouter(){var dispatch=useDispatch();var _useState=useState(true),_useState2=_slicedToArray(_useState,2),checking=_useState2[0],setChecking=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isLoggedIn=_useState4[0],setIsLoggedIn=_useState4[1];useEffect(function(){firebase.auth().onAuthStateChanged(/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(user){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(user===null||user===void 0?void 0:user.uid){dispatch(login(user.uid,user.displayName,user.photoURL));setIsLoggedIn(true);dispatch(startLoadingNotes(user.uid));}else{setIsLoggedIn(false);}setChecking(false);case 2:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}());},[dispatch,setChecking,setIsLoggedIn]);if(checking){return/*#__PURE__*/React.createElement(LoadingScreen,null);}return/*#__PURE__*/React.createElement(Router,null,/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Switch,null,/*#__PURE__*/React.createElement(PublicRoute,{path:\"/react-notes/auth\",component:AuthRouter,isAuthenticated:isLoggedIn}),/*#__PURE__*/React.createElement(PrivateRoute,{exact:true,isAuthenticated:isLoggedIn,path:\"/react-notes\",component:JournalScreen}),/*#__PURE__*/React.createElement(Redirect,{to:\"/react-notes/auth/login\"}))));};","map":{"version":3,"sources":["/samba/Journal/src/routers/AppRouter.js"],"names":["AuthRouter","JournalScreen","useDispatch","login","PrivateRoute","PublicRoute","React","useEffect","useState","firebase","BrowserRouter","Router","Switch","Redirect","LoadingScreen","startLoadingNotes","AppRouter","dispatch","checking","setChecking","isLoggedIn","setIsLoggedIn","auth","onAuthStateChanged","user","uid","displayName","photoURL"],"mappings":"4YAAA,OAASA,UAAT,KAA2B,cAA3B,CACA,OAASC,aAAT,KAA8B,qCAA9B,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,OAASC,KAAT,KAAsB,iBAAtB,CACA,OAASC,YAAT,KAA6B,gBAA7B,CACA,OAASC,WAAT,KAA4B,eAA5B,CAGA,MAAOC,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAASC,QAAT,KAAwB,6BAAxB,CACA,OACIC,aAAa,GAAIC,CAAAA,MADrB,CAEIC,MAFJ,CAGIC,QAHJ,KAIO,kBAJP,CAMA,OAASC,aAAT,KAA8B,qCAA9B,CACA,OAASC,iBAAT,KAAkC,kBAAlC,CAGA,MAAO,IAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CAE3B,GAAMC,CAAAA,QAAQ,CAAGf,WAAW,EAA5B,CAEA,cAAgCM,QAAQ,CAAC,IAAD,CAAxC,wCAAOU,QAAP,eAAiBC,WAAjB,eACA,eAAoCX,QAAQ,CAAC,KAAD,CAA5C,yCAAOY,UAAP,eAAmBC,aAAnB,eAEAd,SAAS,CAAC,UAAI,CAEdE,QAAQ,CAACa,IAAT,GAAgBC,kBAAhB,0FAAoC,iBAAOC,IAAP,kHAEhC,GAAGA,IAAH,SAAGA,IAAH,iBAAGA,IAAI,CAAEC,GAAT,CAAc,CACVR,QAAQ,CAAEd,KAAK,CAACqB,IAAI,CAACC,GAAN,CAAWD,IAAI,CAACE,WAAhB,CAA6BF,IAAI,CAACG,QAAlC,CAAP,CAAR,CACAN,aAAa,CAAE,IAAF,CAAb,CACAJ,QAAQ,CAACF,iBAAiB,CAACS,IAAI,CAACC,GAAN,CAAlB,CAAR,CAIH,CAPD,IAOO,CACHJ,aAAa,CAAE,KAAF,CAAb,CACH,CAGGF,WAAW,CAAC,KAAD,CAAX,CAd4B,sDAApC,gEAkBC,CApBQ,CAoBN,CAACF,QAAD,CAAWE,WAAX,CAAwBE,aAAxB,CApBM,CAAT,CAsBA,GAAGH,QAAH,CAAa,CACT,mBACI,oBAAC,aAAD,MADJ,CAGH,CAED,mBACI,oBAAC,MAAD,mBACI,4CACI,oBAAC,MAAD,mBACI,oBAAC,WAAD,EACI,IAAI,CAAC,mBADT,CAEI,SAAS,CAAGlB,UAFhB,CAGI,eAAe,CAAEoB,UAHrB,EADJ,cAOI,oBAAC,YAAD,EACI,KAAK,KADT,CAEI,eAAe,CAAEA,UAFrB,CAGI,IAAI,CAAC,cAHT,CAII,SAAS,CAAGnB,aAJhB,EAPJ,cAeA,oBAAC,QAAD,EAAU,EAAE,CAAC,yBAAb,EAfA,CADJ,CADJ,CADJ,CAwBH,CA3DM","sourcesContent":["import { AuthRouter } from './AuthRouter'\r\nimport { JournalScreen } from '../components/journal/JournalScreen'\r\nimport { useDispatch } from 'react-redux'\r\nimport { login } from '../actions/auth'\r\nimport { PrivateRoute } from './PrivateRoute'\r\nimport { PublicRoute } from './PublicRoute'\r\n\r\n\r\nimport React, { useEffect, useState } from 'react'\r\nimport { firebase} from '../firebase/firebase-config'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n} from 'react-router-dom'\r\n\r\nimport { LoadingScreen } from '../components/journal/LoadingScreen'\r\nimport { startLoadingNotes } from '../actions/notes'\r\n\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [checking, setChecking] = useState(true)\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false)\r\n    \r\n    useEffect(()=>{\r\n        \r\n    firebase.auth().onAuthStateChanged( async (user) => {\r\n        \r\n        if(user?.uid) {\r\n            dispatch( login(user.uid, user.displayName, user.photoURL) )\r\n            setIsLoggedIn( true );\r\n            dispatch(startLoadingNotes(user.uid));\r\n\r\n\r\n\r\n        } else {\r\n            setIsLoggedIn( false );\r\n        }\r\n\r\n\r\n            setChecking(false);\r\n\r\n    });\r\n    \r\n    }, [dispatch, setChecking, setIsLoggedIn])\r\n    \r\n    if(checking) {\r\n        return(\r\n            <LoadingScreen />\r\n        )\r\n    }\r\n    \r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute \r\n                        path=\"/react-notes/auth\"\r\n                        component={ AuthRouter }\r\n                        isAuthenticated={isLoggedIn}\r\n                    />\r\n\r\n                    <PrivateRoute \r\n                        exact\r\n                        isAuthenticated={isLoggedIn}\r\n                        path=\"/react-notes\"\r\n                        component={ JournalScreen }\r\n                        \r\n                    />\r\n\r\n                <Redirect to='/react-notes/auth/login'/>\r\n\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}