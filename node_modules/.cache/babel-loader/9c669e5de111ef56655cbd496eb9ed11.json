{"ast":null,"code":"import _objectWithoutProperties from\"/samba/Journal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import React from'react';import{Route,Redirect}from'react-router-dom';// import {\n//     TransitionGroup,\n//     CSSTransition\n//   } from \"react-transition-group\";\nexport var PrivateRoute=function PrivateRoute(_ref){var isAuthenticated=_ref.isAuthenticated,Component=_ref.component,rest=_objectWithoutProperties(_ref,[\"isAuthenticated\",\"component\"]);localStorage.setItem('lastPath',rest.location.pathname);// let location = useLocation\nreturn/*#__PURE__*/React.createElement(Route,Object.assign({},rest,{component:function component(props){return isAuthenticated?/*#__PURE__*/React.createElement(Component,props):/*#__PURE__*/React.createElement(Redirect,{to:\"/react-notes/auth/login\"});}}));};","map":{"version":3,"sources":["/samba/Journal/src/routers/PrivateRoute.js"],"names":["React","Route","Redirect","PrivateRoute","isAuthenticated","Component","component","rest","localStorage","setItem","location","pathname","props"],"mappings":"yJAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAGA,OAASC,KAAT,CAAgBC,QAAhB,KAAgC,kBAAhC,CACA;AACA;AACA;AACA;AAEA,MAAO,IAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,MAItB,IAHFC,CAAAA,eAGE,MAHFA,eAGE,CAFSC,SAET,MAFFC,SAEE,CADCC,IACD,gEAEFC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAiCF,IAAI,CAACG,QAAL,CAAcC,QAA/C,EACA;AAEA,mBAGI,oBAAC,KAAD,kBAAYJ,IAAZ,EACI,SAAS,CAAG,mBAACK,KAAD,QACNR,CAAAA,eAAF,cACQ,oBAAC,SAAD,CAAgBQ,KAAhB,CADR,cAEQ,oBAAC,QAAD,EAAU,EAAE,CAAC,yBAAb,EAHA,EADhB,GAHJ,CAcH,CAvBM","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n// import {\n//     TransitionGroup,\n//     CSSTransition\n//   } from \"react-transition-group\";\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n    \n    localStorage.setItem('lastPath', rest.location.pathname);\n    // let location = useLocation\n\n    return (\n\n\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Component { ...props } /> )\n                    : ( <Redirect to=\"/react-notes/auth/login\" /> )\n            )}\n        \n        />\n\n\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n"]},"metadata":{},"sourceType":"module"}