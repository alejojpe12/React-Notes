{"ast":null,"code":"import _slicedToArray from\"/samba/Journal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import{Link}from'react-router-dom';import{useForm}from'../../hooks/useForm';import validator from'validator';import{useDispatch,useSelector}from'react-redux';import{setError,removeError}from'../../actions/ui';import{startRegisterWithEmailPasswordName}from'../../actions/auth';export var RegisterScreen=function RegisterScreen(){var dispatch=useDispatch();var _useSelector=useSelector(function(state){return state.ui;}),msgError=_useSelector.msgError;console.log(msgError);var _useForm=useForm({name:'',email:'',password:'',password2:''}),_useForm2=_slicedToArray(_useForm,2),formValues=_useForm2[0],handleInputChange=_useForm2[1];var name=formValues.name,email=formValues.email,password=formValues.password,password2=formValues.password2;var handleRegister=function handleRegister(e){e.preventDefault();if(isFormValue()){dispatch(startRegisterWithEmailPasswordName(email,password,name));}};var isFormValue=function isFormValue(){if(name.trim().length===0){dispatch(setError('Name is required'));return false;}else if(!validator.isEmail(email)){dispatch(setError('Email is required'));return false;}else if(password!==password2||password.length<5){dispatch(setError('Password should be at least 6 characters and match each other'));return false;}dispatch(removeError());return true;};return/*#__PURE__*/React.createElement(\"div\",{id:\"auth-container\",className:\"auth__box-container animate__animated animate__flipInX\"},/*#__PURE__*/React.createElement(\"h3\",{className:\"auth__title\"},\"Register\"),/*#__PURE__*/React.createElement(\"form\",{onSubmit:handleRegister},msgError&&/*#__PURE__*/React.createElement(\"div\",{className:\"auth__alert-error\"},msgError),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",placeholder:\"Name\",name:\"name\",className:\"auth__input\",autoComplete:\"off\",value:name,onChange:handleInputChange}),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",placeholder:\"Email\",name:\"email\",className:\"auth__input\",autoComplete:\"off\",value:email,onChange:handleInputChange}),/*#__PURE__*/React.createElement(\"input\",{type:\"password\",placeholder:\"Password\",name:\"password\",className:\"auth__input\",value:password,onChange:handleInputChange}),/*#__PURE__*/React.createElement(\"input\",{type:\"password\",placeholder:\"Confirm password\",name:\"password2\",className:\"auth__input\",value:password2,onChange:handleInputChange}),/*#__PURE__*/React.createElement(\"button\",{type:\"Submit\",className:\"btn btn-primary btn-block mb-5\"},\"Register\"),/*#__PURE__*/React.createElement(Link,{to:\"/auth/login\",className:\"link\"},\"Already register?\")));};","map":{"version":3,"sources":["/samba/Journal/src/components/auth/RegisterScreen.js"],"names":["React","Link","useForm","validator","useDispatch","useSelector","setError","removeError","startRegisterWithEmailPasswordName","RegisterScreen","dispatch","state","ui","msgError","console","log","name","email","password","password2","formValues","handleInputChange","handleRegister","e","preventDefault","isFormValue","trim","length","isEmail"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport { useForm } from '../../hooks/useForm'\r\nimport validator from 'validator';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setError, removeError } from '../../actions/ui';\r\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth';\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {msgError} = useSelector(state => state.ui);\r\n\r\n    console.log(msgError);\r\n\r\n    const [formValues, handleInputChange] = useForm(\r\n        {\r\n            name: '',\r\n            email: '',\r\n            password: '',\r\n            password2: ''\r\n        }\r\n    )\r\n\r\n    const {name, email, password, password2} = formValues\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (isFormValue()) {\r\n            dispatch(startRegisterWithEmailPasswordName(email, password, name))\r\n        }\r\n    }\r\n\r\n    const isFormValue= () => {\r\n\r\n        if(name.trim().length === 0) {\r\n            dispatch(setError('Name is required'))\r\n            return false\r\n        }else if(!validator.isEmail(email)) {\r\n            dispatch(setError('Email is required'))\r\n            return false\r\n        }else if(password !== password2 || password.length < 5) {\r\n            dispatch(setError('Password should be at least 6 characters and match each other'))\r\n            return false \r\n        }\r\n        dispatch(removeError())\r\n        return true\r\n    }\r\n\r\n    \r\n    return (\r\n\r\n            <div id=\"auth-container\" className= {`auth__box-container animate__animated animate__flipInX`}>\r\n\r\n            <h3 className=\"auth__title\">Register</h3>\r\n            <form\r\n                onSubmit={handleRegister}\r\n            >\r\n                {\r\n                    msgError&&(\r\n                        <div className=\"auth__alert-error\">\r\n                            {msgError}\r\n                        </div>)\r\n                }\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Name\"\r\n                    name=\"name\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={name}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={email}\r\n                    onChange={handleInputChange}\r\n\r\n                />\r\n\r\n                <input \r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={password}\r\n                    onChange={handleInputChange}\r\n\r\n                />\r\n\r\n                <input \r\n                    type=\"password\"\r\n                    placeholder=\"Confirm password\"\r\n                    name=\"password2\"\r\n                    className=\"auth__input\"\r\n                    value={password2}\r\n                    onChange={handleInputChange}\r\n\r\n                />\r\n\r\n                <button\r\n                    type=\"Submit\"\r\n                    className=\"btn btn-primary btn-block mb-5\"\r\n                >\r\n                    Register\r\n                </button>\r\n                <Link \r\n                    to=\"/auth/login\"\r\n                    className=\"link\"\r\n                >\r\n                    Already register?\r\n                </Link>\r\n            </form>\r\n                        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}