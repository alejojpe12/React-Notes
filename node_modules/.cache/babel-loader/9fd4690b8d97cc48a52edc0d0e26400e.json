{"ast":null,"code":"import { types } from \"../types/types\";\nimport { firebase, googleAuthProvider } from '../firebase/firebase-config';\nimport { startLoading, finishLoading } from \"./ui\";\nimport Swal from 'sweetalert2'; // export const startLoginEmailPassword = (email, password) => {\n//     return(dispatch) => {\n//         dispatch(startLoading());\n//         firebase.auth().signInWithEmailAndPassword(email, password)\n//         .then( ({user})  => {\n//             dispatch( login(user.uid, user.displayName))\n//             dispatch(finishLoading());\n//         })\n//         .catch(e => {\n//             console.log(e);\n//             dispatch(finishLoading());\n//             Swal.fire('Error', e.message, 'error')\n//         })\n//     }\n// }\n// export const startRegisterWithEmailPasswordName = (email, password, name)=>{\n//     return( dispatch ) => {\n//         firebase.auth().createUserWithEmailAndPassword( email, password )\n//             .then( async ({user}) => {\n//                 await user.updateProfile({displayName: name})\n//                 dispatch(\n//                     login(user.uid, user.displayName )\n//                 )\n//             })\n//             .catch(e => {\n//                 console.log(e)\n//                 Swal.fire('Error', e.message, 'error')\n//             })\n//     }\n// }\n\nexport const startGoogleLogin = () => {\n  return dispatch => {\n    firebase.auth().signInWithPopup(googleAuthProvider).then(({\n      user\n    }) => {\n      console.log(user);\n      dispatch(login(user.uid, user.displayName, user.photoURL));\n    });\n  };\n};\nexport const login = (uid, displayName, photoURL) => ({\n  type: types.login,\n  payload: {\n    uid,\n    displayName,\n    photoURL\n  }\n}); // export const startLogout = () => {\n//     return async(dispatch) => {\n//         await firebase.auth().signOut();\n//         dispatch( logout() )\n//     }\n// }\n// export const logout = () =>({\n//     type: types.logout\n// })","map":{"version":3,"sources":["/samba/Journal/src/actions/auth.js"],"names":["types","firebase","googleAuthProvider","startLoading","finishLoading","Swal","startGoogleLogin","dispatch","auth","signInWithPopup","then","user","console","log","login","uid","displayName","photoURL","type","payload"],"mappings":"AAAA,SAASA,KAAT,QAAsB,gBAAtB;AACA,SAASC,QAAT,EAAmBC,kBAAnB,QAA6C,6BAA7C;AACA,SAASC,YAAT,EAAuBC,aAAvB,QAA4C,MAA5C;AACA,OAAOC,IAAP,MAAiB,aAAjB,C,CAMA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAGA,OAAO,MAAMC,gBAAgB,GAAC,MAAM;AAChC,SAAOC,QAAD,IAAc;AAChBN,IAAAA,QAAQ,CAACO,IAAT,GAAgBC,eAAhB,CAAiCP,kBAAjC,EAECQ,IAFD,CAEO,CAAC;AAACC,MAAAA;AAAD,KAAD,KAAY;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAJ,MAAAA,QAAQ,CACJO,KAAK,CAACH,IAAI,CAACI,GAAN,EAAWJ,IAAI,CAACK,WAAhB,EAA6BL,IAAI,CAACM,QAAlC,CADD,CAAR;AAGH,KAPD;AAQH,GATD;AAUH,CAXM;AAeP,OAAO,MAAMH,KAAK,GAAG,CAACC,GAAD,EAAMC,WAAN,EAAmBC,QAAnB,MAAiC;AAClDC,EAAAA,IAAI,EAAElB,KAAK,CAACc,KADsC;AAElDK,EAAAA,OAAO,EAAE;AACLJ,IAAAA,GADK;AAELC,IAAAA,WAFK;AAGLC,IAAAA;AAHK;AAFyC,CAAjC,CAAd,C,CAWP;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA","sourcesContent":["import { types } from \"../types/types\"\r\nimport { firebase, googleAuthProvider } from '../firebase/firebase-config';\r\nimport { startLoading, finishLoading } from \"./ui\";\r\nimport Swal from 'sweetalert2'\r\n\r\n\r\n\r\n\r\n\r\n// export const startLoginEmailPassword = (email, password) => {\r\n//     return(dispatch) => {\r\n\r\n//         dispatch(startLoading());\r\n//         firebase.auth().signInWithEmailAndPassword(email, password)\r\n//         .then( ({user})  => {\r\n//             dispatch( login(user.uid, user.displayName))\r\n//             dispatch(finishLoading());\r\n            \r\n//         })\r\n//         .catch(e => {\r\n//             console.log(e);\r\n//             dispatch(finishLoading());\r\n//             Swal.fire('Error', e.message, 'error')\r\n\r\n//         })\r\n\r\n\r\n//     }\r\n// }\r\n\r\n// export const startRegisterWithEmailPasswordName = (email, password, name)=>{\r\n//     return( dispatch ) => {\r\n//         firebase.auth().createUserWithEmailAndPassword( email, password )\r\n//             .then( async ({user}) => {\r\n//                 await user.updateProfile({displayName: name})\r\n\r\n//                 dispatch(\r\n//                     login(user.uid, user.displayName )\r\n//                 )\r\n//             })\r\n//             .catch(e => {\r\n//                 console.log(e)\r\n//                 Swal.fire('Error', e.message, 'error')\r\n\r\n//             })\r\n//     }\r\n// }\r\n\r\n\r\nexport const startGoogleLogin=() => {\r\n    return(dispatch) => {\r\n        firebase.auth().signInWithPopup( googleAuthProvider )\r\n        \r\n        .then( ({user}) => {\r\n            console.log(user)\r\n            dispatch(\r\n                login(user.uid, user.displayName, user.photoURL)\r\n            )\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const login = (uid, displayName, photoURL) => ({\r\n    type: types.login,\r\n    payload: {\r\n        uid,\r\n        displayName,\r\n        photoURL\r\n    }\r\n});\r\n\r\n\r\n\r\n// export const startLogout = () => {\r\n//     return async(dispatch) => {\r\n//         await firebase.auth().signOut();\r\n        \r\n//         dispatch( logout() )\r\n//     }\r\n// }\r\n\r\n// export const logout = () =>({\r\n//     type: types.logout\r\n// })\r\n\r\n"]},"metadata":{},"sourceType":"module"}