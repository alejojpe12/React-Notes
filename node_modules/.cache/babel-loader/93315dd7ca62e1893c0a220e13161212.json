{"ast":null,"code":"var _jsxFileName = \"/samba/Journal/src/routers/PrivateRoute.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router-dom';\nimport { CSSTransition } from \"react-transition-group\";\nexport const PrivateRoute = ({\n  isAuthenticated,\n  component: Component,\n  ...rest\n}) => {\n  localStorage.setItem('lastPath', rest.location.pathname);\n  return /*#__PURE__*/React.createElement(CSSTransition, {\n    key: location.key,\n    classNames: \"fade\",\n    timeout: 300,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    component: props => isAuthenticated ? /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 25\n      }\n    })) : /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/react-notes/auth/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 25\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  })));\n};\nPrivateRoute.propTypes = {\n  isAuthenticated: PropTypes.bool.isRequired,\n  component: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["/samba/Journal/src/routers/PrivateRoute.js"],"names":["React","PropTypes","Route","Redirect","CSSTransition","PrivateRoute","isAuthenticated","component","Component","rest","localStorage","setItem","location","pathname","key","props","propTypes","bool","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SACIC,aADJ,QAES,wBAFT;AAIA,OAAO,MAAMC,YAAY,GAAG,CAAC;AACzBC,EAAAA,eADyB;AAEzBC,EAAAA,SAAS,EAAEC,SAFc;AAGzB,KAAGC;AAHsB,CAAD,KAItB;AAEFC,EAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCF,IAAI,CAACG,QAAL,CAAcC,QAA/C;AAEA,sBACI,oBAAC,aAAD;AACA,IAAA,GAAG,EAAED,QAAQ,CAACE,GADd;AAEA,IAAA,UAAU,EAAC,MAFX;AAGA,IAAA,OAAO,EAAE,GAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKA,oBAAC,KAAD,oBAAYL,IAAZ;AACI,IAAA,SAAS,EAAIM,KAAD,IACNT,eAAF,gBACQ,oBAAC,SAAD,oBAAgBS,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADR,gBAEQ,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,yBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KALA,CADJ;AAgBH,CAxBM;AA0BPV,YAAY,CAACW,SAAb,GAAyB;AACrBV,EAAAA,eAAe,EAAEL,SAAS,CAACgB,IAAV,CAAeC,UADX;AAErBX,EAAAA,SAAS,EAAEN,SAAS,CAACkB,IAAV,CAAeD;AAFL,CAAzB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\nimport {\n    CSSTransition\n  } from \"react-transition-group\"\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n    \n    localStorage.setItem('lastPath', rest.location.pathname);\n\n    return (\n        <CSSTransition\n        key={location.key}\n        classNames=\"fade\"\n        timeout={300}\n      >\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Component { ...props } /> )\n                    : ( <Redirect to=\"/react-notes/auth/login\" /> )\n            )}\n        \n        />\n         </CSSTransition>\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n"]},"metadata":{},"sourceType":"module"}