{"version":3,"sources":["hooks/useForm.js","types/types.js","firebase/firebase-config.js","actions/ui.js","helpers/loadNotes.js","helpers/fileUpload.js","actions/notes.js","actions/auth.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/journal/NothingSelected.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/JournalScreen.js","helpers/animation.js","routers/PrivateRoute.js","routers/PublicRoute.js","components/journal/LoadingScreen.js","routers/AppRouter.js","reducers/uiReducer.js","reducers/notesReducer.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["useForm","initialState","useState","values","setValues","handleInputChange","target","name","value","reset","newFormState","types","login","logout","uiSetError","uiRemoveError","uiStartLoading","uiFinishLoading","notesAddNew","notesActive","notesLoad","notesUpdated","notesFileUrl","notesDelete","notesLogoutCleaning","notesDeleteImage","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","setError","error","type","payload","finishLoading","loadNotes","uid","a","collection","get","notesSnap","notes","forEach","snapChild","push","id","data","fileUpload","file","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","activeNote","note","addNewNote","startLoadingNotes","dispatch","setNotes","startSaveNote","getState","url","noteToFirestore","doc","update","refreshNote","Swal","fire","title","deleteNote","displayName","photoURL","startLoginEmailPassword","email","password","signInWithEmailAndPassword","then","user","catch","e","console","log","message","LoginScreen","useDispatch","loading","useSelector","state","ui","formValues","className","onSubmit","preventDefault","placeholder","autoComplete","onChange","disabled","onClick","signInWithPopup","src","alt","to","RegisterScreen","msgError","password2","isFormValue","trim","length","validator","isEmail","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPasswordName","AuthRouter","exact","path","component","JournalEntry","date","titleTrim","slice","bodyTrim","noteDate","moment","format","JournalEntries","map","key","Sidebar","show","setShow","style","transform","position","transition","class","display","signOut","active","emptyNotes","newNote","Date","getTime","add","NothingSelected","NotesAppBar","files","text","allowOutsideClick","didOpen","showLoading","fileUrl","close","startUploading","document","querySelector","click","NoteScreen","activeId","useRef","useEffect","current","delete","startDeleting","JournalScreen","PrivateRoute","isAuthenticated","Component","rest","localStorage","setItem","location","pathname","props","PublicRoute","LoadingScreen","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.9bca0222.chunk.js","sourcesContent":["import { useState } from \"react\"\n\n\nexport const useForm = ( initialState = {} ) => {\n    \n    const [values, setValues] = useState(initialState);\n\n    const handleInputChange = ({ target }) => {\n\n        setValues({\n            ...values,\n            [ target.name ]: target.value\n        });\n\n    }\n    const reset = (newFormState = initialState ) => {\n        setValues( newFormState );\n    }\n\n\n\n    return [ values, handleInputChange, reset ];\n\n}\n","export const types = {\r\n\r\n    login: '[Auth] Login',\r\n    logout: '[Auth] Logout',\r\n    \r\n    // UI\r\n\r\n    uiSetError: '[UI] Set Error',\r\n    uiRemoveError: '[UI] Remove Error',\r\n\r\n    uiStartLoading: '[UI] Start loading',\r\n    uiFinishLoading: '[UI] Finish loading',\r\n\r\n    notesAddNew: '[Notes] New note',\r\n    notesActive: '[Notes] Set active note',\r\n    notesLoad: '[Notes] Load note',\r\n    notesUpdated: '[Notes] Upadate note',\r\n    notesFileUrl: '[Notes] Upadate image',\r\n    notesDelete: '[Notes] Delete note',\r\n    notesLogoutCleaning: '[Notes] Logout cleaning',\r\n    notesDeleteImage: '[Notes] Delte Image'\r\n\r\n\r\n\r\n}","import firebase from 'firebase/app';\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyAMNzqLqWmXonTF3Ya34jFzibBScDhrtls\",\r\n    authDomain: \"react-journal-13781.firebaseapp.com\",\r\n    projectId: \"react-journal-13781\",\r\n    storageBucket: \"react-journal-13781.appspot.com\",\r\n    messagingSenderId: \"857911536643\",\r\n    appId: \"1:857911536643:web:7f4510d581702132c2f236\"\r\n};\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n\r\nconst db = firebase.firestore();\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport {\r\n    db,\r\n    googleAuthProvider,\r\n    firebase\r\n\r\n}\r\n\r\n\r\n\r\n\r\n","import { types } from \"../types/types\";\r\n\r\nexport const setError = ( error ) => ({\r\n    type: types.uiSetError,\r\n    payload: error\r\n})\r\n\r\n\r\nexport const removeError = (  ) => ({\r\n    type: types.uiRemoveError\r\n})\r\n\r\nexport const startLoading = () => ({\r\n    type: types.uiStartLoading\r\n\r\n})\r\nexport const finishLoading = () => ({\r\n    type: types.uiFinishLoading\r\n})","import { db } from '../firebase/firebase-config';\r\n\r\n\r\n\r\nexport const loadNotes= async ( uid ) => {\r\n\r\n    const notesSnap = await db.collection(`${ uid }/journal/notes`).get();\r\n\r\n    const notes = [];\r\n\r\n    notesSnap.forEach(snapChild => {\r\n        notes.push ({\r\n            id: snapChild.id,\r\n            ...snapChild.data(),\r\n        })\r\n    });\r\n\r\n    return notes;\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","export const  fileUpload = async ( file )=> {\r\n\r\n    const cloudUrl = 'https://api.cloudinary.com/v1_1/alejo-jpe/upload';\r\n\r\n    const formData = new FormData();\r\n    formData.append('upload_preset', 'react-journal')\r\n    formData.append('file', file)\r\n\r\n    try {\r\n        \r\n        const resp = await fetch( cloudUrl, {\r\n            method: 'POST',\r\n            body: formData\r\n        } );\r\n\r\n        if(resp.ok) {\r\n            const cloudResp = await resp.json();\r\n            return cloudResp.secure_url\r\n        } else {\r\n            throw await resp.json();\r\n        }\r\n\r\n    } catch (err) {\r\n        throw err\r\n    }\r\n\r\n\r\n\r\n\r\n}","import Swal from 'sweetalert2'\r\n\r\nimport { db } from \"../firebase/firebase-config\";\r\nimport { types } from '../types/types';\r\nimport { loadNotes } from '../helpers/loadNotes'\r\nimport { fileUpload } from '../helpers/fileUpload';\r\n\r\n\r\n\r\nexport const startNewNote = () => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {uid} = getState().auth\r\n\r\n        const newNote = {\r\n            title: '',\r\n            body: '',\r\n            date: new Date().getTime()\r\n        }\r\n        \r\n        const doc = await db.collection( `${uid}/journal/notes`).add( newNote) \r\n\r\n        dispatch( activeNote( doc.id, newNote) );\r\n        dispatch( addNewNote( doc.id, newNote) );\r\n    }\r\n}\r\n\r\nexport const activeNote = ( id, note ) => ({\r\n\r\n    type: types.notesActive,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n});\r\n\r\nexport const addNewNote = ( id, note ) => ({ \r\n    type: types.notesAddNew,\r\n    payload: {\r\n        id, \r\n        ...note\r\n    }\r\n})\r\n\r\n\r\nexport const startLoadingNotes = ( uid ) => {\r\n    return async ( dispatch ) => {\r\n        const notes = await loadNotes( uid );\r\n        dispatch(setNotes(notes));\r\n        \r\n    }\r\n}\r\n\r\n\r\n\r\nexport const setNotes = ( notes ) => ({\r\n    type: types.notesLoad,\r\n    payload: notes \r\n});\r\n\r\n\r\nexport const startSaveNote = ( note )=> {\r\n    return async(dispatch, getState) => {\r\n        \r\n        const {uid} = getState().auth\r\n        \r\n        if ( !note.url ){\r\n            \r\n            delete note.url;\r\n        }\r\n        \r\n        \r\n        const noteToFirestore =  { ...note };\r\n        delete noteToFirestore.id;\r\n        \r\n        await db.doc(`${uid}/journal/notes/${ note.id }`).update( noteToFirestore );\r\n        \r\n        dispatch( refreshNote(note.id, noteToFirestore) );\r\n        Swal.fire('saved', note.title, 'success')\r\n        \r\n    }\r\n}\r\n\r\nexport const refreshNote = ( id, note ) => ({\r\n    type: types.notesUpdated,\r\n    payload: {\r\n        id, \r\n        note: {\r\n            id,\r\n            ...note\r\n        }\r\n    }\r\n});\r\n\r\nexport const startUploading = (file) => {\r\n    return async( dispatch, getState ) => {\r\n\r\n        const { active:activeNote } = getState().notes;\r\n\r\n        Swal.fire({\r\n            title: 'Uploading...',\r\n            text: 'Please wait...',\r\n            allowOutsideClick: false,\r\n            didOpen: () => {\r\n                Swal.showLoading();\r\n            }\r\n        });\r\n        \r\n        const fileUrl = await fileUpload(file)\r\n\r\n        activeNote.url= fileUrl;\r\n\r\n        dispatch( startSaveNote( activeNote ) )\r\n\r\n        Swal.close();\r\n    }\r\n}\r\n\r\nexport const startDeleting = ( id ) => {\r\n    return async (dispatch, getState) => {\r\n        const uid = getState().auth.uid;\r\n        await db.doc(`${ uid }/journal/notes/${ id }`).delete();\r\n        \r\n        dispatch( deleteNote(id) );\r\n        \r\n    }\r\n}\r\n\r\nexport const deleteImage = (url) => ({\r\n\r\n    type: types.deleteImage,\r\n    payload: url\r\n    \r\n})\r\n\r\nexport const deleteNote = ( id ) => ({\r\n    type: types.notesDelete,\r\n    payload: id,\r\n})\r\n\r\nexport const emptyNotes = (notes, active) => ({\r\n    type: types.notesLogoutCleaning,\r\n    payload: {\r\n        active,\r\n        notes\r\n    }\r\n})","import { types } from \"../types/types\"\r\nimport { firebase, googleAuthProvider } from '../firebase/firebase-config';\r\nimport { startLoading, finishLoading } from \"./ui\";\r\nimport Swal from 'sweetalert2'\r\nimport { emptyNotes } from './notes'\r\n\r\nexport const login = (uid, displayName, photoURL) => ({\r\n    type: types.login,\r\n    payload: {\r\n        uid,\r\n        displayName,\r\n        photoURL\r\n    }\r\n});\r\n\r\n\r\nexport const startLoginEmailPassword = (email, password) => {\r\n    return(dispatch) => {\r\n\r\n        dispatch(startLoading());\r\n        firebase.auth().signInWithEmailAndPassword(email, password)\r\n        .then( ({user})  => {\r\n            dispatch( login(user.uid, user.displayName))\r\n            dispatch(finishLoading());\r\n\r\n            \r\n        })\r\n        .catch(e => {\r\n            console.log(e);\r\n            dispatch(finishLoading());\r\n            Swal.fire('Error', e.message, 'error')\r\n\r\n        })\r\n\r\n\r\n    }\r\n}\r\n\r\nexport const startRegisterWithEmailPasswordName = (email, password, name)=>{\r\n    return( dispatch ) => {\r\n        firebase.auth().createUserWithEmailAndPassword( email, password )\r\n            .then( async ({user}) => {\r\n                \r\n                await user.updateProfile({displayName: name})\r\n                \r\n                dispatch(\r\n                    login(user.uid, user.displayName)\r\n                )\r\n            })\r\n            .catch(e => {\r\n                console.log(e)\r\n                Swal.fire('Error', e.message, 'error')\r\n\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const startGoogleLogin=() => {\r\n    return(dispatch) => {\r\n        firebase.auth().signInWithPopup( googleAuthProvider )\r\n        \r\n        .then( state => {\r\n            console.log(state)  \r\n        })\r\n    }\r\n}\r\n\r\nexport const startLogout = () => {\r\n    return async(dispatch, getState) => {\r\n        await firebase.auth().signOut();\r\n        \r\n        // const {notes} = getState()\r\n        // const {active, notes: note} = notes\r\n        dispatch( logout() )\r\n        dispatch( emptyNotes() )\r\n    }\r\n}\r\n\r\nexport const logout = () =>({\r\n    type: types.logout\r\n})\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport { useForm } from '../../hooks/useForm'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLoginEmailPassword, startGoogleLogin } from '../../actions/auth'\r\n\r\nexport const LoginScreen = () => {\r\n    \r\n    const dispatch = useDispatch()\r\n\r\n    const {loading} = useSelector(state => state.ui)\r\n\r\n\r\n    const[formValues, handleInputChange ] = useForm({\r\n        email: '',\r\n        password: ''\r\n    })\r\n\r\n    const {email, password} = formValues;\r\n\r\n        const handleLogin = (e) => {\r\n            e.preventDefault();\r\n            dispatch(startLoginEmailPassword (email, password))\r\n        }\r\n\r\n    const handleGoogleLogin = ()=> {\r\n        dispatch( startGoogleLogin() );\r\n    }\r\n    \r\n\r\n    return (\r\n        <>\r\n            <div id=\"auth-container\" className= {`auth__box-container animate__animated animate__flipInX`}>\r\n\r\n            <span className=\"auth__title\">Login</span>\r\n            <form \r\n                onSubmit={handleLogin }\r\n            >\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={ email }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <input \r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={ password }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <button\r\n                    type=\"Submit\"\r\n                    className=\"btn btn-primary btn-block\"\r\n                    disabled={ loading }\r\n                >\r\n                    Login\r\n                </button>\r\n\r\n                <div className=\"auth__social-networks\">\r\n                    <p>Login with social networks</p>\r\n\r\n                    <div \r\n                        className=\"google-btn\"\r\n                        onClick={handleGoogleLogin}\r\n                    >\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            <b>Sign in with google</b>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <Link \r\n                    to=\"/react-notes/auth/register\"\r\n                    className=\"link\"\r\n              \r\n                >\r\n                    Create a new account\r\n                </Link>\r\n            </form>\r\n\r\n            </div>\r\n            {/* <a href='https://www.freepik.com/photos/business'>Business photo created by freepik - www.freepik.com</a> */}\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport { useForm } from '../../hooks/useForm'\r\nimport validator from 'validator';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setError, removeError } from '../../actions/ui';\r\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth';\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {msgError} = useSelector(state => state.ui);\r\n\r\n    console.log(msgError);\r\n\r\n    const [formValues, handleInputChange] = useForm(\r\n        {\r\n            name: '',\r\n            email: '',\r\n            password: '',\r\n            password2: ''\r\n        }\r\n    )\r\n\r\n    const {name, email, password, password2} = formValues\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (isFormValue()) {\r\n            dispatch(startRegisterWithEmailPasswordName(email, password, name))\r\n        }\r\n    }\r\n\r\n    const isFormValue= () => {\r\n\r\n        if(name.trim().length === 0) {\r\n            dispatch(setError('Name is required'))\r\n            return false\r\n        }else if(!validator.isEmail(email)) {\r\n            dispatch(setError('Email is required'))\r\n            return false\r\n        }else if(password !== password2 || password.length < 5) {\r\n            dispatch(setError('Password should be at least 6 characters and match each other'))\r\n            return false \r\n        }\r\n        dispatch(removeError())\r\n        return true\r\n    }\r\n\r\n    \r\n    return (\r\n\r\n            <div id=\"auth-container\" className= {`auth__box-container animate__animated animate__flipInX`}>\r\n\r\n            <h3 className=\"auth__title\">Register</h3>\r\n            <form\r\n                onSubmit={handleRegister}\r\n            >\r\n                {\r\n                    msgError&&(\r\n                        <div className=\"auth__alert-error\">\r\n                            {msgError}\r\n                        </div>)\r\n                }\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Name\"\r\n                    name=\"name\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={name}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={email}\r\n                    onChange={handleInputChange}\r\n\r\n                />\r\n\r\n                <input \r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={password}\r\n                    onChange={handleInputChange}\r\n\r\n                />\r\n\r\n                <input \r\n                    type=\"password\"\r\n                    placeholder=\"Confirm password\"\r\n                    name=\"password2\"\r\n                    className=\"auth__input\"\r\n                    value={password2}\r\n                    onChange={handleInputChange}\r\n\r\n                />\r\n\r\n                <button\r\n                    type=\"Submit\"\r\n                    className=\"btn btn-primary btn-block mb-5\"\r\n                >\r\n                    Register\r\n                </button>\r\n                <Link \r\n                    to=\"/auth/login\"\r\n                    className=\"link\"\r\n                >\r\n                    Already register?\r\n                </Link>\r\n            </form>\r\n                        </div>\r\n    )\r\n}\r\n","import React from 'react'  \r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport { LoginScreen } from '../components/auth/LoginScreen'\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen'\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <div className=\"auth__main\">\r\n                \r\n                <Switch>\r\n                    <Route \r\n                        exact\r\n                        path=\"/react-notes/auth/login\"\r\n                        component={ LoginScreen }\r\n                    />\r\n\r\n                    <Route \r\n                        exact\r\n                        path=\"/react-notes/auth/register\"\r\n                        component={ RegisterScreen }\r\n                    />\r\n\r\n                    <Redirect to='/react-notes/auth/login'/>\r\n\r\n                </Switch>\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport moment from 'moment';\r\nimport { useDispatch } from 'react-redux';\r\nimport { activeNote } from '../../actions/notes';\r\n\r\nexport const JournalEntry = ( {id, date, title, body, url} ) => {\r\n\r\n    const titleTrim = title.slice(-10);\r\n    const bodyTrim = body.slice(-10);\r\n\r\n\r\n    const noteDate = moment(date);\r\n    const dispatch = useDispatch()\r\n    const handleEntryClick= () => {\r\n            dispatch(activeNote(id, {\r\n                date, title, body, url\r\n            })\r\n        );\r\n    }\r\n\r\n    return (\r\n\r\n        <div \r\n            className= {\"journal__entry pointer animate__animated animate__flipInX\"}\r\n            onClick= { handleEntryClick }\r\n        >\r\n            <div className=\"journal__box-1\">\r\n\r\n                {\r\n                    url&&\r\n                    <div \r\n                        className=\"journal__entry-picture\"\r\n                        // style={{\r\n                        //     backgroundSize: 'cover',\r\n                        //     backgroundImage: `url(${url})`\r\n                        // }}\r\n                    >\r\n                        <img src={url}  alt=\"\" />\r\n                    </div>\r\n                }\r\n\r\n            </div>\r\n\r\n                    <div className=\"journal__body-entry journal__box-2\">\r\n                        <p className=\"journal__entry-title\">\r\n                            { titleTrim }\r\n                        </p>\r\n                        \r\n                        <p className=\"journal__entry-body\">\r\n                            { bodyTrim }\r\n                        </p>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"journal__entry-date-box journal__box-3\">\r\n                        <span>{noteDate.format('dddd')}</span>\r\n                        <h4>{noteDate.format('Do')}</h4>\r\n\r\n                    </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { JournalEntry } from './JournalEntry'\r\nimport { useSelector } from 'react-redux'\r\n\r\nexport const JournalEntries = () => {\r\n    \r\n    const { notes } = useSelector(state => state.notes)\r\n\r\n\r\n    return (\r\n\r\n        \r\n        <div className=\"journal__entries\">\r\n            {\r\n                notes.map(note => (\r\n                    <JournalEntry \r\n                        key={ note.id }\r\n                        {...note}\r\n                    />   \r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React, { useState } from 'react'\r\nimport { JournalEntries } from './JournalEntries'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth'\r\nimport {  startNewNote } from '../../actions/notes'\r\nexport const photoDefault = \"https://res.cloudinary.com/alejo-jpe/image/upload/v1629902279/guest_c84jr7.png\"\r\n\r\nexport const Sidebar = () => {\r\n    const dispatch = useDispatch()\r\n    const handleLogout = () => {\r\n        dispatch( startLogout() )\r\n    }\r\n\r\n    const handleAddNew = () => {\r\n        dispatch(startNewNote())\r\n    }\r\n        \r\n    const state = useSelector(state => state.auth)\r\n    \r\n    const photoURL = state.photoURL\r\n    const name = state.name \r\n\r\n    \r\n    // const style2 = {\r\n    //     background: 'black',\r\n    //     width: '25px',\r\n    //     color: 'white',\r\n    //     border: 'none',\r\n    //     cursor: 'pointer', \r\n    //     zIndex: '1',\r\n    //     borderRadius: '5px'\r\n    // };\r\n\r\n    const [show, setShow] = useState('translateX(-100vw)')\r\n\r\n    console.log(show)\r\n    \r\n    const HideShow = () => {\r\n        if(show === 'translateX(-100vw)'){\r\n            setShow('translateX(0vw)')\r\n        } else {\r\n            setShow('translateX(-100vw)')\r\n        }\r\n            \r\n        \r\n        console.log(show)\r\n        \r\n    } \r\n    let style = {\r\n        transform : show,\r\n        position: 'fixed',\r\n        transition: 'all .3s ease-in-out',\r\n\r\n        \r\n    };\r\n    \r\n    return (\r\n\r\n        \r\n    <>\r\n\r\n\r\n\r\n    <div onClick={HideShow} className=\"btn-box\">\r\n        <button className=\"button-30\" ><i class=\"far fa-sticky-note\"></i></button>\r\n        \r\n    </div>    \r\n\r\n<div className='animate__animated animate__bounce' style={ style }>        \r\n     <aside className=\"journal__sidebar\"  >\r\n        \r\n                <div className=\"journal__sidebar-navbar\">\r\n\r\n            <div className=\"journal__profile\">\r\n                \r\n                {\r\n                    (photoURL)\r\n                        ?<div className=\"profilePhoto\">\r\n                            <img src={ ` ${photoURL } `} alt=\"\" />\r\n                        </div>\r\n                        \r\n                        :<div className=\"profilePhoto\">\r\n                            <img src={ ` ${photoDefault } `} alt=\"\" />\r\n                        </div>\r\n                }\r\n\r\n                            <input \r\n                                id=\"fileSelector2\"\r\n                                type=\"file\"\r\n                                name=\"file\"\r\n                                style={{display: 'none'}}\r\n                            />\r\n\r\n                    <span className=\"journal__name mt-5 ml-5\" >{name}</span>\r\n\r\n            </div>\r\n\r\n\r\n            <button \r\n                className=\"journal__logout btn\"\r\n                onClick={handleLogout}\r\n            >\r\n                Logout\r\n            </button>\r\n\r\n \r\n        </div>\r\n        \r\n        <div \r\n            className= \"journal__new-entry\"\r\n            \r\n        >\r\n\r\n            <i\r\n                className=\"far fa-calendar-plus fa-5x\"\r\n                onClick={ handleAddNew }\r\n            >\r\n            </i>\r\n\r\n        </div>\r\n\r\n            <JournalEntries />\r\n\r\n</aside> \r\n        \r\n</div>\r\n    </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const NothingSelected = () => {\r\n    return (\r\n        <div className=\"nothing__main-content\">\r\n            <p>\r\n                Select something or\r\n                <br />\r\n                Create entry!\r\n            </p>\r\n\r\n            <i class=\"fas fa-user-astronaut\"></i>\r\n            \r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n","import moment from 'moment';\r\nimport React from 'react'\r\nimport { useDispatch,  useSelector } from 'react-redux'\r\nimport { startSaveNote, startUploading } from '../../actions/notes'\r\n\r\n\r\nexport const NotesAppBar = () => {\r\n    const date = new Date();\r\n    const noteDate = moment(date);\r\n\r\n    const dispatch = useDispatch()\r\n    const { active } = useSelector(state => state.notes)\r\n    const handleSave = () => {\r\n        dispatch( startSaveNote(active) )\r\n    }\r\n\r\n    const handlePictureClick = ()=> {\r\n        document.querySelector('#fileSelector').click()\r\n    }\r\n\r\n    const handleFileChange = (e) => {\r\n        const file = e.target.files[0];\r\n        if (file) {\r\n            dispatch(startUploading(file))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"notes__appbar\">\r\n            <span>{noteDate.format('dddd')}</span>\r\n            <span>{noteDate.format('Do')}</span>\r\n\r\n            <input \r\n                id=\"fileSelector\"\r\n                type=\"file\"\r\n                name=\"file\"\r\n                style={{display: 'none'}}\r\n                onChange={ handleFileChange }\r\n            \r\n            />\r\n\r\n\r\n            <div>\r\n\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick= { handlePictureClick }\r\n                >\r\n                    <i class=\"far fa-images notes__icon\"></i> \r\n                </button>\r\n\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={ handleSave }\r\n                >\r\n                   <i class=\"far fa-save notes__icon\"></i>\r\n                </button>\r\n            \r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { NotesAppBar } from './NotesAppBar'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useForm } from '../../hooks/useForm'\r\nimport { activeNote, startDeleting } from '../../actions/notes'\r\n\r\nexport const NoteScreen = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const {active:note} = useSelector(state => state.notes)     \r\n    const [formValues, handleInputChange, reset] = useForm( note );\r\n    const {body, title, id} = formValues;\r\n\r\n    const activeId = useRef(note.id)\r\n\r\n    useEffect(() => {\r\n        if(note.id !== activeId.current)    {\r\n            reset( note )\r\n            activeId.current = note.id\r\n        }\r\n\r\n    }, [note, reset ])\r\n\r\n    useEffect(()=>{\r\n        \r\n        dispatch(activeNote(formValues.id, { ...formValues }))\r\n        \r\n    },[formValues, dispatch])\r\n\r\n    const handleDelete = () => {\r\n        dispatch( startDeleting( id ) );\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"notes__main-content\">\r\n            \r\n            <NotesAppBar />\r\n\r\n            <div className=\"notes__content\">\r\n\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Some awesome\"\r\n                    className=\"notes__title-input\"\r\n                    name= \"title\"\r\n                    autoComplete=\"off\"\r\n                    value={ title }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <div className=\"text-container\">\r\n                    <textarea \r\n                        placeholder=\"What happened today?\"\r\n                        className=\"notes__textarea\"\r\n                        name= \"body\"\r\n                        value={ body }\r\n                        onChange={ handleInputChange }\r\n                    >\r\n\r\n\r\n\r\n                        \r\n                    </textarea>\r\n\r\n                    {\r\n\r\n                        (note.url) \r\n                        && (\r\n\r\n                            <div>\r\n\r\n                                <div className=\"notes__image\">\r\n                            \r\n                                    <img \r\n                                        src= {note.url}\r\n                                        alt=\"img\"\r\n                                    />\r\n                                </div>\r\n\r\n                            </div>\r\n                        )\r\n\r\n                    }\r\n\r\n\r\n                </div>\r\n            \r\n            </div>\r\n            \r\n    <div class=\"container\" onClick={handleDelete}>\r\n        <div class=\"button\">\r\n            <div class=\"icon\">\r\n                <i class=\"fas fa-eraser\"></i>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Sidebar } from './Sidebar'\r\nimport { NothingSelected } from './NothingSelected'\r\nimport { NoteScreen } from '../notes/NoteScreen'\r\nimport { useSelector } from 'react-redux'\r\nimport { animation } from '../../helpers/animation'\r\n\r\nexport const JournalScreen = () => {\r\n\r\n    const { active } = useSelector(state => state.notes)\r\n\r\n    return (\r\n        <div className={`journal__main-content ${animation}`  }> \r\n\r\n      <Sidebar />\r\n  \r\n            <main>\r\n                {\r\n                    (active) \r\n                        ?<NoteScreen />\r\n                        :<NothingSelected />\r\n                }\r\n            </main>\r\n        </div>\r\n    )\r\n}","export const animation = \"animate__animated animate__fadeIn animate__faster\"\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n// import {\n//     TransitionGroup,\n//     CSSTransition\n//   } from \"react-transition-group\";\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n    \n    localStorage.setItem('lastPath', rest.location.pathname);\n    // let location = useLocation\n\n    return (\n\n\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Component { ...props } /> )\n                    : ( <Redirect to=\"/react-notes/auth/login\" /> )\n            )}\n        \n        />\n\n\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Redirect to=\"/react-notes\" /> )\n                    : ( <Component { ...props } /> )\n            )}\n            class=\"auth__box-container animate__animated animate__flipInX\"\n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React from 'react'\r\n\r\nexport const LoadingScreen = () => {\r\n    return (\r\n        <div className=\"loading_background animate__fadeIn\">\r\n            <h1 className=\"loading_title\">Loading</h1>\r\n        </div>\r\n    )\r\n}\r\n","import { AuthRouter } from './AuthRouter'\r\nimport { JournalScreen } from '../components/journal/JournalScreen'\r\nimport { useDispatch } from 'react-redux'\r\nimport { login } from '../actions/auth'\r\nimport { PrivateRoute } from './PrivateRoute'\r\nimport { PublicRoute } from './PublicRoute'\r\n\r\n\r\nimport React, { useEffect, useState } from 'react'\r\nimport { firebase} from '../firebase/firebase-config'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n} from 'react-router-dom'\r\n\r\nimport { LoadingScreen } from '../components/journal/LoadingScreen'\r\nimport { startLoadingNotes } from '../actions/notes'\r\n\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [checking, setChecking] = useState(true)\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false)\r\n    \r\n    useEffect(()=>{\r\n        \r\n    firebase.auth().onAuthStateChanged( async (user) => {\r\n        \r\n        if(user?.uid) {\r\n            dispatch( login(user.uid, user.displayName, user.photoURL) )\r\n            setIsLoggedIn( true );\r\n            dispatch(startLoadingNotes(user.uid));\r\n\r\n\r\n\r\n        } else {\r\n            setIsLoggedIn( false );\r\n        }\r\n\r\n\r\n            setChecking(false);\r\n\r\n    });\r\n    \r\n    }, [dispatch, setChecking, setIsLoggedIn])\r\n    \r\n    if(checking) {\r\n        return(\r\n            <LoadingScreen />\r\n        )\r\n    }\r\n    \r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute \r\n                        path=\"/react-notes/auth\"\r\n                        component={ AuthRouter }\r\n                        isAuthenticated={isLoggedIn}\r\n                    />\r\n\r\n                    <PrivateRoute \r\n                        exact\r\n                        isAuthenticated={isLoggedIn}\r\n                        path=\"/react-notes\"\r\n                        component={ JournalScreen }\r\n                        \r\n                    />\r\n\r\n                <Redirect to='/react-notes/auth/login'/>\r\n\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import { types } from '../types/types';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    msgError: null\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action ) => {\r\n    switch (action.type) {\r\n        case types.uiSetError:\r\n            return {\r\n                ...state,\r\n                msgError: action.payload\r\n            }\r\n\r\n            case types.uiRemoveError:\r\n                return {\r\n                    ...state,\r\n                    msgError: null\r\n                }\r\n\r\n            case types.uiStartLoading: \r\n                return {\r\n                    ...state,\r\n                    loading: true\r\n                }\r\n            \r\n                case types.uiFinishLoading: \r\n                return {\r\n                    ...state,\r\n                    loading: false\r\n                }\r\n                \r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    notes: [],\r\n    active: null\r\n}\r\n\r\nexport const notesReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case types.notesActive:\r\n            return {\r\n                ...state,\r\n                active: {\r\n                    ...action.payload\r\n                }\r\n                \r\n            }\r\n\r\n            case types.notesAddNew: \r\n                return {\r\n                    ...state,\r\n                    notes: [ action.payload, ...state.notes ]\r\n                }\r\n        \r\n        case types.notesLoad: \r\n\r\n            return {\r\n                ...state,\r\n                notes: [ ...action.payload ]\r\n            }    \r\n\r\n        case types.notesUpdated: \r\n\r\n        return {\r\n            ...state,\r\n            notes: state.notes.map(\r\n                note => note.id === action.payload.id\r\n                    ? action.payload.note \r\n                    : note\r\n            )\r\n        }\r\n        \r\n        case types.notesDelete:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: state.notes.filter( note => note.id !== action.payload )\r\n            }\r\n\r\n        case types.notesLogoutCleaning: \r\n            return { \r\n                ...state,\r\n                notes: [],\r\n                active: null\r\n            }\r\n\r\n        case types.notesDeleteImage: {\r\n            return {\r\n                ...state,\r\n                url: action.payload.url\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport thunk from 'redux-thunk';\r\nimport { uiReducer } from '../reducers/uiReducer';\r\nimport { notesReducer } from '../reducers/notesReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    notes: notesReducer\r\n})\r\n\r\n\r\nexport const store = createStore( \r\n    reducers, \r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n    );","import { types } from '../types/types';\r\n\r\n\r\n\r\n\r\nexport const authReducer = (state ={}, action) => {\r\n    switch ( action.type ) {\r\n        case types.login: \r\n            return {\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName,\r\n                photoURL: action.payload.photoURL\r\n            }\r\n    \r\n        case types.logout: \r\n            return { }\r\n\r\n\r\n    \r\n        default:\r\n            return state\r\n    }\r\n    \r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport { AppRouter } from './routers/AppRouter';\r\nimport { store } from './store/store';\r\n\r\nexport const JournalApp = () => {\r\n    return (\r\n        <Provider store={ store }>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { JournalApp } from './JournalApp';\nimport './styles/style.scss'\n\n\nReactDOM.render(\n    <JournalApp />,\n  document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}